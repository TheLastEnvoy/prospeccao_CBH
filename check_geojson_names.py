#!/usr/bin/env python3
"""
Script para verificar nomes de munic√≠pios no GeoJSON
"""

import json
import os

def check_geojson_names():
    """Verifica nomes de munic√≠pios no GeoJSON"""
    geojson_path = os.path.join('static', 'geojson', 'PR_Municipios_2023_optimized.geojson')
    
    if not os.path.exists(geojson_path):
        print(f"‚ùå Arquivo GeoJSON n√£o encontrado: {geojson_path}")
        return
    
    try:
        with open(geojson_path, 'r', encoding='utf-8') as f:
            data = json.load(f)
        
        print("üó∫Ô∏è Verificando nomes no GeoJSON...")
        
        # Buscar munic√≠pios com "Coronel"
        coronel_features = [f for f in data['features'] if 'Coronel' in f['properties']['NM_MUN']]

        print(f"\nüìç Munic√≠pios com 'Coronel' no GeoJSON:")
        for feature in coronel_features:
            nome = feature['properties']['NM_MUN']
            print(f"   - '{nome}'")

        # Buscar munic√≠pios com "Domingos" ou "Domingo"
        domingos_features = [f for f in data['features'] if 'Domingos' in f['properties']['NM_MUN'] or 'Domingo' in f['properties']['NM_MUN']]

        print(f"\nüìç Munic√≠pios com 'Domingos/Domingo' no GeoJSON:")
        for feature in domingos_features:
            nome = feature['properties']['NM_MUN']
            print(f"   - '{nome}'")
        
        # Buscar alguns outros munic√≠pios importantes
        importantes = ['Curitiba', 'Londrina', 'Maring√°', 'Foz do Igua√ßu']
        print(f"\nüìç Munic√≠pios importantes no GeoJSON:")
        for municipio in importantes:
            found = [f for f in data['features'] if f['properties']['NM_MUN'] == municipio]
            if found:
                print(f"   ‚úÖ '{municipio}' encontrado")
            else:
                # Buscar varia√ß√µes
                variations = [f for f in data['features'] if municipio.lower() in f['properties']['NM_MUN'].lower()]
                if variations:
                    print(f"   ‚ö†Ô∏è '{municipio}' n√£o encontrado, mas h√° varia√ß√µes:")
                    for v in variations:
                        print(f"      - '{v['properties']['NM_MUN']}'")
                else:
                    print(f"   ‚ùå '{municipio}' n√£o encontrado")
        
        print(f"\nüìä Total de munic√≠pios no GeoJSON: {len(data['features'])}")
        
        return data
        
    except Exception as e:
        print(f"‚ùå Erro ao ler GeoJSON: {e}")
        return None

if __name__ == "__main__":
    check_geojson_names()
